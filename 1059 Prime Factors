#include<iostream>
#include<math.h>
#include<vector>
using namespace std;

vector<int> visited;
int prime(long int n)
{
    if(n==1) return 0;
    for(long int i=2;i<n;i++)
    {
        if(n%i==0)
        {
            return 0;
        }
    }
    return 1;
}

int main()
{
    long int N;
    cin>>N;
    visited.push_back(0);
    visited.push_back(0);
    cout<<N<<"=";
    if(prime(N))
    {
        cout<<N;
        return 0;
    }
    if(N==1)
    {
        cout<<1;
        return 0;
    }
    int i=2;
    int cheng=0;
    while(!prime(N)&&i<=N)
    {
        int tag=0;
        while(N%i==0&&prime(i))     //当前i是素数,且i能被整除
        {
            tag++;
            N=N/i;
        }
        if(tag>0)
        {
            if(cheng>0)
            {
                cout<<"*";
            }
            if(tag==1)
            {
                cout<<i;
                cheng++;
            }
            else
            {
                cout<<i<<"^"<<tag;
                cheng++;
            }
        }
        i++;
    }
    if(N!=1) cout<<"*"<<N;
    return 0;
}
