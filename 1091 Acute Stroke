#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
using namespace std;

struct Node{
    int x,y,z;
};
int n,m,slice,T;
int X[6]={1,-1,0,0,0,0};
int Y[6]={0,0,1,-1,0,0};
int Z[6]={0,0,0,0,1,-1};

int pixel[1290][130][61];
bool visited[1290][130][61]={false};

int judge(int x,int y,int z)
{
    if(x<0||x>=n||y<0||y>=m||z<0||z>=slice) return 0;

    if(pixel[x][y][z]==0||visited[x][y][z]==true) return 0;

    return 1;
}

int BFS(int x,int y,int z)
{
    int sum=0;
    queue<Node> Q;
    Node temp;
    temp.x=x;
    temp.y=y;
    temp.z=z;
    Q.push(temp);
    visited[x][y][z]=true;

    while(!Q.empty())
    {
        Node temp=Q.front();
        Q.pop();
        sum++;
        for(int i=0;i<6;i++)
        {
            int nowx=temp.x+X[i];
            int nowy=temp.y+Y[i];
            int nowz=temp.z+Z[i];
            if(judge(nowx,nowy,nowz))
            {
                Node temp2;
                temp2.x=nowx;
                temp2.y=nowy;
                temp2.z=nowz;
                Q.push(temp2);
                visited[nowx][nowy][nowz]=true;
            }
        }
    }
    if(sum>=T) return sum;
    else return 0;
}

int main()
{
    scanf("%d%d%d%d", &n, &m, &slice, &T);
    for(int z = 0; z < slice; z++) {    //注意先枚举切片层号
        for(int x = 0; x < n; x++) {
            for(int y = 0; y < m; y++) {
                scanf("%d", &pixel[x][y][z]);
            }
        }
    }
    int ans = 0;    //记录脑瘤块中1的个数总和
    for(int z = 0; z < slice; z++) {
        for(int x = 0; x < n; x++) {
            for(int y = 0; y < m; y++) {
                //如果当前位置为1，且未被访问，则BFS当前块
                if(pixel[x][y][z] == 1 && visited[x][y][z] == false) {
                    ans += BFS(x, y, z);
                }
            }
        }
    }

    cout<<ans;
    return 0;
}
