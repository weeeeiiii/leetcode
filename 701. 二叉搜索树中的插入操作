#include <iostream>
#include <deque>
#include <string>
#include <map>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <queue>
#include <stack>

using namespace std;


struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;

    TreeNode() : val(0), left(nullptr), right(nullptr) {}

    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}

    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

class Solution {
public:
    TreeNode *insertIntoBST(TreeNode *root, int val) {
        if (root == NULL)
        {
            TreeNode *temp = new TreeNode(val);
            return temp;
        }

        if (val < root->val) {
            root->left=insertIntoBST(root->left,val);
        }
        else if(val>root->val)
        {
            root->right=insertIntoBST(root->right,val);
        }
        return root;
    }
};
