#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;

int sushu(int n)
{
    if(n<=1) return 0;
    for(int i=2;i<n;i++)
    {
        if(n%i==0) return 0;
    }
    return 1;
}
int find_sushu(int n)
{
    while(!sushu(n))
    {
        n++;
    }
    return n;
}
int main()
{
    int N,M;
    cin>>N>>M;
    vector<int> v;
    v.resize(M);
    for(int i=0;i<M;i++)
    {
        cin>>v[i];
    }
    N=find_sushu(N);

    vector<bool> vis;
    vis.resize(M);
    for(int i=0;i<M;i++)
    {
        int number=v[i]%N;
        if(vis[number]==false)
        {
            vis[number]=true;
            cout<<number;
        }
        else
        {
            int step;
            for(step=1;step<N;step++)
            {
                number=(v[i]+step*step)%N;
                if(vis[number]==false)      //二次探查找到
                {
                    vis[number]=true;
                    cout<<number;
                    break;
                }
            }
            if(step>=N) cout<<"-";
        }
        if(i<M-1) cout<<" ";
    }
    return 0;
}
